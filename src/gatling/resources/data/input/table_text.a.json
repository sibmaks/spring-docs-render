{
  "model": {
    "key": "",
    "users": [
      {
        "username": "admin",
        "createdAt": "2020-12-18",
        "blocked": false
      },
      {
        "username": "user-a",
        "createdAt": "2021-12-18",
        "blocked": true
      },
      {
        "username": "user-b",
        "createdAt": "2022-12-18",
        "blocked": false
      },
      {
        "username": "user-a",
        "createdAt": "2021-12-18",
        "blocked": true
      },
      {
        "username": "user-b",
        "createdAt": "2022-12-18",
        "blocked": false
      },
      {
        "username": "user-a",
        "createdAt": "2021-12-18",
        "blocked": true
      },
      {
        "username": "user-b",
        "createdAt": "2022-12-18",
        "blocked": false
      },
      {
        "username": "user-a",
        "createdAt": "2021-12-18",
        "blocked": true
      },
      {
        "username": "user-b",
        "createdAt": "2022-12-18",
        "blocked": false
      },
      {
        "username": "user-a",
        "createdAt": "2021-12-18",
        "blocked": true
      },
      {
        "username": "user-b",
        "createdAt": "2022-12-18",
        "blocked": false
      },
      {
        "username": "user-a",
        "createdAt": "2021-12-18",
        "blocked": true
      },
      {
        "username": "user-b",
        "createdAt": "2022-12-18",
        "blocked": false
      }
    ]
  }
}